Trace(cost=2):
0
  ParseGridTask()
  IndependentParse(x_mode=ParseMode.crop,y_mode=ParseMode.crop,x_bg_model=return 0,y_bg_model=return 0,unknown_background=True,x_partition_color=-1,y_partition_color=-1,y_constant_size=(30, 30))
1
  AttentionTask(atn=InferenceAttention(sample_index=[0], x_index=[[0]], model=return 1), g_atn=InferenceGlobalAttention(shape_queries=(ShapeQuery(sample_index=(0,), shape_index=(0,), models=(return y_mid_15,)),)), common_y_shapes=(
Unknown(0, 0, [
[0, 0, 0, 1, 7, 0, 6, 0, 0, 0, 0, 6, 3, 3, 0, 2, 2, 0, 3, 3, 6, 0, 0, 0, 0, 6, 0, 7, 1, 0],
[0, 7, 1, 0, 0, 7, 0, 0, 0, 4, 6, 6, 3, 0, 2, 0, 0, 2, 0, 3, 6, 6, 4, 0, 0, 0, 7, 0, 0, 1],
[0, 1, 5, 0, 6, 0, 0, 0, 0, 6, 3, 3, 0, 2, 7, 7, 7, 7, 2, 0, 3, 3, 6, 0, 0, 0, 0, 6, 0, 5],
[1, 0, 0, 5, 0, 0, 0, 0, 6, 6, 3, 3, 2, 0, 7, 0, 0, 7, 0, 2, 3, 3, 6, 6, 0, 0, 0, 0, 5, 0],
[7, 0, 6, 0, 8, 8, 6, 0, 3, 3, 0, 2, 4, 4, 1, 0, 0, 1, 4, 4, 2, 0, 3, 3, 0, 6, 8, 8, 0, 6],
[0, 7, 0, 0, 8, 0, 0, 0, 3, 0, 2, 0, 4, 4, 0, 0, 0, 0, 4, 4, 0, 2, 0, 3, 0, 0, 0, 8, 0, 0],
[6, 0, 0, 0, 6, 0, 2, 0, 0, 2, 7, 7, 1, 0, 0, 0, 0, 0, 0, 1, 7, 7, 2, 0, 0, 2, 0, 6, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 7, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 7, 0, 2, 2, 0, 0, 0, 0, 0],
[0, 0, 0, 6, 3, 3, 0, 2, 0, 8, 1, 1, 7, 7, 0, 2, 2, 0, 7, 7, 1, 1, 8, 0, 2, 0, 3, 3, 6, 0],
[0, 4, 6, 6, 3, 0, 2, 0, 8, 8, 1, 1, 7, 0, 2, 2, 2, 2, 0, 7, 1, 1, 8, 8, 0, 2, 0, 3, 6, 6],
[0, 6, 3, 3, 0, 2, 7, 7, 1, 1, 0, 0, 0, 2, 4, 4, 4, 4, 2, 0, 0, 0, 1, 1, 7, 7, 2, 0, 3, 3],
[6, 6, 3, 3, 2, 0, 7, 0, 1, 1, 0, 0, 2, 2, 4, 0, 0, 4, 2, 2, 0, 0, 1, 1, 0, 7, 0, 2, 3, 3],
[3, 3, 0, 2, 4, 4, 1, 0, 7, 7, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 7, 7, 0, 1, 4, 4, 2, 0],
[3, 0, 2, 0, 4, 4, 0, 0, 7, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 7, 0, 0, 4, 4, 0, 2],
[0, 2, 7, 7, 1, 0, 0, 0, 0, 2, 4, 4, 0, 2, 6, 6, 6, 6, 2, 0, 4, 4, 2, 0, 0, 0, 0, 1, 7, 7],
[2, 0, 7, 0, 0, 0, 0, 4, 2, 2, 4, 0, 2, 2, 6, 0, 0, 6, 2, 2, 0, 4, 2, 2, 4, 0, 0, 0, 0, 7],
[2, 0, 7, 0, 0, 0, 0, 4, 2, 2, 4, 0, 2, 2, 6, 0, 0, 6, 2, 2, 0, 4, 2, 2, 4, 0, 0, 0, 0, 7],
[0, 2, 7, 7, 1, 0, 0, 0, 0, 2, 4, 4, 0, 2, 6, 6, 6, 6, 2, 0, 4, 4, 2, 0, 0, 0, 0, 1, 7, 7],
[3, 0, 2, 0, 4, 4, 0, 0, 7, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 7, 0, 0, 4, 4, 0, 2],
[3, 3, 0, 2, 4, 4, 1, 0, 7, 7, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 7, 7, 0, 1, 4, 4, 2, 0],
[6, 6, 3, 3, 2, 0, 7, 0, 1, 1, 0, 0, 2, 2, 4, 0, 0, 4, 2, 2, 0, 0, 1, 1, 0, 7, 0, 2, 3, 3],
[0, 6, 3, 3, 0, 2, 7, 7, 1, 1, 0, 0, 0, 2, 4, 4, 4, 4, 2, 0, 0, 0, 1, 1, 7, 7, 2, 0, 3, 3],
[0, 4, 6, 6, 3, 0, 2, 0, 8, 8, 1, 1, 7, 0, 2, 2, 2, 2, 0, 7, 1, 1, 8, 8, 0, 2, 0, 3, 6, 6],
[0, 0, 0, 6, 3, 3, 0, 2, 0, 8, 1, 1, 7, 7, 0, 2, 2, 0, 7, 7, 1, 1, 8, 0, 2, 0, 3, 3, 6, 0],
[0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 7, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 7, 0, 2, 2, 0, 0, 0, 0, 0],
[6, 0, 0, 0, 6, 0, 2, 0, 0, 2, 7, 7, 1, 0, 0, 0, 0, 0, 0, 1, 7, 7, 2, 0, 0, 2, 0, 6, 0, 0],
[0, 7, 0, 0, 8, 0, 0, 0, 3, 0, 2, 0, 4, 4, 0, 0, 0, 0, 4, 4, 0, 2, 0, 3, 0, 0, 0, 8, 0, 0],
[7, 0, 6, 0, 8, 8, 6, 0, 3, 3, 0, 2, 4, 4, 1, 0, 0, 1, 4, 4, 2, 0, 3, 3, 0, 6, 8, 8, 0, 6],
[1, 0, 0, 5, 0, 0, 0, 0, 6, 6, 3, 3, 2, 0, 7, 0, 0, 7, 0, 2, 3, 3, 6, 6, 0, 0, 0, 0, 5, 0],
[0, 1, 5, 0, 6, 0, 0, 0, 0, 6, 3, 3, 0, 2, 7, 7, 7, 7, 2, 0, 3, 3, 6, 0, 0, 0, 0, 6, 0, 5]]),))
  Hamming(feat_index=0,pixel_model=if mirror(x,y) <= 8.5:
  if mirror(x,y) <= -0.5:
      return False
  else:
      return True
else:
    return False
  return mirror(x,y)
else:
  return cell(x,y))
2
  DrawCanvasTask()
  DrawCanvas(width_model=return 30,height_model=return 30,layer_model=None,is_all_equal=False)