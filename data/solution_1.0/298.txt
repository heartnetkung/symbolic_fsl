Trace(cost=4):
0
  ParseGridTask()
  IndependentParse(x_mode=ParseMode.color_proximity_diag,y_mode=ParseMode.color_proximity_diag,x_bg_model=return 0,y_bg_model=return 0,unknown_background=False,x_partition_color=-1,y_partition_color=-1,y_constant_size=(6, 6))
1
  ReparseStackTask()
  ReparseStack(param=ReparseStackParam.reluctant)
2
  AttentionTask(atn=InferenceAttention(sample_index=[0], x_index=[[0, 1]], model=if -shape0.y >= 0:
  return 0
else:
  return 1), g_atn=InferenceGlobalAttention(shape_queries=(ShapeQuery(sample_index=(0,), shape_index=(1,), models=(return y_mid_1,)), ShapeQuery(sample_index=(0,), shape_index=(0,), models=(return w_2,)))), common_y_shapes=(
FilledRectangle(0,0,6,1,2), 
FilledRectangle(0,0,1,6,8)))
  CreateRectangle(x_model=return 0,y_model=return shape0.y,w_model=return 6,h_model=return 1,c_model=return 2)
3
  AttentionTask(atn=InferenceAttention(sample_index=[0], x_index=[[0, 2, 1]], model=if shape0.mass != shape2.height:
  return 0
else:
  return 1), g_atn=InferenceGlobalAttention(shape_queries=(ShapeQuery(sample_index=(0,), shape_index=(1,), models=(return y_mid_1,)), ShapeQuery(sample_index=(0,), shape_index=(0,), models=(return w_2,)))), common_y_shapes=(
FilledRectangle(0,0,6,1,2), 
FilledRectangle(0,0,1,6,8)))
  CreateRectangle(x_model=return shape2.x,y_model=return 0,w_model=return 1,h_model=return 6,c_model=return 8)
4
  AttentionTask(atn=InferenceAttention(sample_index=[0], x_index=[[0, 2, 1, 3]], model=return 1), g_atn=InferenceGlobalAttention(shape_queries=(ShapeQuery(sample_index=(0,), shape_index=(1,), models=(return y_mid_1,)), ShapeQuery(sample_index=(0,), shape_index=(0,), models=(return w_2,)))), common_y_shapes=(
FilledRectangle(0,0,6,1,2), 
FilledRectangle(0,0,1,6,8)))
  CreateRectangle(x_model=return shape2.x,y_model=return shape0.y,w_model=return 1,h_model=return 1,c_model=return 4)
5
  CleanUpTask()
  CleanUp(filter_model=if shape0.mass != 2:
  return 1
else:
  return 0)
6
  DrawCanvasTask()
  DrawCanvas(width_model=return 6,height_model=return 6,layer_model=if shape0.mass >= 2:
  return 0
else:
  return 1,is_all_equal=False)